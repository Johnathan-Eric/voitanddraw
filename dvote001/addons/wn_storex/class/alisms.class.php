<?php
 load()->func("\143\x6f\x6d\x6d\x75\x6e\x69\143\x61\x74\151\157\x6e"); class Alisms { private $api = "\150\164\164\160\72\57\57\144\171\x73\155\163\141\x70\x69\x2e\141\x6c\x69\x79\x75\156\x63\163\56\143\157\x6d\x2f\77"; private $accessKeyId = ''; private $signName = ''; private $accessKeySecret = ''; private $dateTimeFormat = "\131\55\x6d\55\x64\x5c\x54\x48\x3a\x69\72\163\x5c\132"; protected $format = "\112\x53\117\116"; public function setFormat($format) { goto fUC5G; aozD6: if ($Kor5k) { goto Phr5z; } goto qtl3P; ELXpL: Phr5z: goto Lmm_2; qtl3P: $this->format = $format; goto ELXpL; fUC5G: $Kor5k = !in_array($format, array("\122\x41\127", "\x58\115\114", "\x4a\x53\117\116")); goto aozD6; Lmm_2: } public function __construct($accessKeyId, $accessKeySecret, $signName) { goto KaMD1; KaMD1: $this->accessKeyId = $accessKeyId; goto GSC0e; GSC0e: $this->accessKeySecret = $accessKeySecret; goto tVpa7; tVpa7: $this->signName = $signName; goto Lwbto; Lwbto: } public function send($mobile, $TemplateParam, $outOrderId = '', $TemplateCode) { goto QYdiA; cR6gI: return $result; goto K2Eht; e9j5k: $apiurl = $this->api . $querydata; goto qs9HI; iwNQE: $sign = $this->computeSignature($params, $this->accessKeySecret); goto bs4Hu; bs4Hu: $params["\123\151\147\156\141\164\165\x72\145"] = $sign; goto z0Fbr; QYdiA: $params = $this->params($mobile, $TemplateParam, $outOrderId, $TemplateCode); goto iwNQE; qs9HI: $result = ihttp_get($apiurl); goto cR6gI; z0Fbr: $querydata = http_build_query($params); goto e9j5k; K2Eht: } private function params($mobile, $TemplateParam, $outOrderId, $TemplateCode) { goto f46iP; f46iP: date_default_timezone_set("\107\x4d\x54"); goto WGHL7; WGHL7: $params = array("\120\x68\x6f\x6e\145\116\x75\x6d\x62\x65\162\163" => $mobile, "\123\x69\147\156\116\141\155\x65" => $this->signName, "\124\x65\x6d\160\x6c\141\x74\x65\103\157\144\x65" => $TemplateCode, "\124\x65\155\x70\x6c\141\x74\x65\120\141\162\x61\155" => $TemplateParam, "\x4f\x75\x74\x49\x64" => $outOrderId, "\122\145\x67\x69\x6f\x6e\111\144" => "\143\x6e\55\150\x61\x6e\x67\172\x68\157\x75", "\101\143\143\145\x73\163\113\x65\x79\x49\x64" => $this->accessKeyId, "\x46\x6f\x72\x6d\x61\x74" => $this->format, "\123\x69\147\156\x61\164\165\x72\x65\115\x65\164\x68\x6f\x64" => "\x48\115\101\x43\55\123\110\x41\x31", "\x53\x69\147\x6e\141\x74\x75\x72\x65\126\145\x72\163\x69\157\156" => "\x31\x2e\60", "\x53\x69\147\x6e\x61\x74\165\x72\145\116\x6f\156\143\145" => uniqid(), "\x54\151\x6d\145\163\164\x61\155\x70" => date($this->dateTimeFormat), "\x41\143\164\151\157\x6e" => "\x53\145\x6e\144\x53\x6d\x73", "\126\x65\x72\x73\151\x6f\156" => "\x32\60\x31\x37\x2d\x30\65\x2d\62\x35"); goto auULx; auULx: return $params; goto r01Ho; r01Ho: } private function computeSignature($parameters, $accessKeySecret) { goto P315o; Nv7YL: u2GwT: goto V3NG_; jNau8: $f1QnX = !(!empty($parameters) && is_array($parameters)); goto ycqGr; T7QrJ: ftf80: goto Nv7YL; P315o: ksort($parameters); goto Dw_p3; pBtXs: return $signature; goto trXJt; V3NG_: $stringToSign = "\107\105\124" . "\x26\45\x32\x46\46" . $this->percentencode(substr($canonicalizedQueryString, 1)); goto vXbHO; vXbHO: $signature = $this->signString($stringToSign, $accessKeySecret . "\46"); goto pBtXs; rtMaw: foreach ($parameters as $key => $value) { $canonicalizedQueryString .= "\x26" . $this->percentEncode($key) . "\75" . $this->percentEncode($value); WULRh: } goto T7QrJ; ycqGr: if ($f1QnX) { goto u2GwT; } goto rtMaw; Dw_p3: $canonicalizedQueryString = ''; goto jNau8; trXJt: } protected function signString($source, $accessSecret) { return base64_encode(hash_hmac("\x73\150\141\x31", $source, $accessSecret, true)); } protected function percentEncode($str) { goto SjwQ0; SjwQ0: $result = urlencode($str); goto DEsXX; YEDX6: return $result; goto UsoKa; fm0Ur: $result = preg_replace("\57\45\x37\x45\x2f", "\176", $result); goto YEDX6; DEsXX: $result = preg_replace("\57\134\x2b\x2f", "\45\62\x30", $result); goto mvveb; mvveb: $result = preg_replace("\57\x5c\52\x2f", "\45\x32\101", $result); goto fm0Ur; UsoKa: } }